/**
 * Generated by Agitar build: AgitarOne Version 5.3.0.000022 (Build date: Jan 04, 2012) [5.3.0.000022]
 * JDK Version: 1.6.0_14
 *
 * Generated on 29 Jul, 2013 2:29:17 PM
 * Time to generate: 00:13.022 seconds
 *
 */

package com.huawei.unibi.molap.util;

import com.agitar.lib.junit.AgitarTestCase;

public class ByteUtilAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return ByteUtil.class;
    }
    
    public void testConstructor() throws Throwable {
        new ByteUtil();
        assertTrue("Test call resulted in expected outcome", true);
    }
    
    public void testCompare() throws Throwable {
        byte[] buffer2 = new byte[2];
        byte[] buffer1 = new byte[4];
        buffer1[1] = (byte)-1;
        int result = ByteUtil.compare(buffer1, buffer2);
        assertEquals("result", 255, result);
    }
    
    public void testCompare1() throws Throwable {
        byte[] buffer2 = new byte[2];
        byte[] buffer1 = new byte[4];
        int result = ByteUtil.compare(buffer1, buffer2);
        assertEquals("result", 0, result);
    }
    
    public void testCompare2() throws Throwable {
        byte[] buffer1 = new byte[4];
        byte[] buffer2 = new byte[0];
        int result = ByteUtil.compare(buffer1, buffer2);
        assertEquals("result", 0, result);
    }
    
    public void testCompare3() throws Throwable {
        byte[] buffer1 = new byte[2];
        int result = ByteUtil.compare(buffer1, buffer1);
        assertEquals("result", 0, result);
    }
    
    public void testCompare4() throws Throwable {
        byte[] buffer2 = new byte[2];
        byte[] buffer1 = new byte[0];
        int result = ByteUtil.compare(buffer1, buffer2);
        assertEquals("result", 0, result);
    }
    
    public void testConvertToIntArray() throws Throwable {
        long[] longArray = new long[0];
        int[] result = ByteUtil.convertToIntArray(longArray);
        assertEquals("result.length", 0, result.length);
    }
    
    public void testConvertToIntArray1() throws Throwable {
        long[] longArray = new long[5];
        int[] result = ByteUtil.convertToIntArray(longArray);
        assertEquals("result.length", 5, result.length);
        assertEquals("result[0]", 0, result[0]);
    }
    
    public void testCompareThrowsNullPointerException() throws Throwable {
        byte[] buffer2 = new byte[2];
        try {
            ByteUtil.compare((byte[]) null, buffer2);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ByteUtil.class, ex);
        }
    }
    
    public void testCompareThrowsNullPointerException1() throws Throwable {
        byte[] buffer1 = new byte[4];
        try {
            ByteUtil.compare(buffer1, (byte[]) null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ByteUtil.class, ex);
        }
    }
    
    public void testConvertToIntArrayThrowsNullPointerException() throws Throwable {
        try {
            ByteUtil.convertToIntArray((long[]) null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ByteUtil.class, ex);
        }
    }
}

