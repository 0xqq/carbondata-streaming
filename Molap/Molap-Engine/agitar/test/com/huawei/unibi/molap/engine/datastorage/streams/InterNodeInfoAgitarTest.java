/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/**
 * Generated by Agitar build: AgitarOne Version 5.3.0.000022 (Build date: Jan 04, 2012) [5.3.0.000022]
 * JDK Version: 1.6.0_14
 *
 * Generated on 29 Jul, 2013 4:59:18 PM
 * Time to generate: 00:12.162 seconds
 *
 */

package com.huawei.unibi.molap.engine.datastorage.streams;

import com.agitar.lib.junit.AgitarTestCase;

public class InterNodeInfoAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return InterNodeInfo.class;
    }
    
    public void testConstructor() throws Throwable {
        InterNodeInfo interNodeInfo = new InterNodeInfo();
        assertNull("interNodeInfo.getFileName()", interNodeInfo.getFileName());
    }
    
    public void testSetFileName() throws Throwable {
        InterNodeInfo interNodeInfo = new InterNodeInfo();
        interNodeInfo.setFileName("testInterNodeInfoFileName");
        assertEquals("interNodeInfo.getFileName()", "testInterNodeInfoFileName", interNodeInfo.getFileName());
    }
    
    public void testSetMdKey() throws Throwable {
        InterNodeInfo interNodeInfo = new InterNodeInfo();
        byte[] mdKey = new byte[3];
        interNodeInfo.setMdKey(mdKey);
        assertSame("interNodeInfo.getMdKey()", mdKey, interNodeInfo.getMdKey());
    }
    
    public void testSetNodeOffset() throws Throwable {
        InterNodeInfo interNodeInfo = new InterNodeInfo();
        interNodeInfo.setNodeOffset(100L);
        assertEquals("interNodeInfo.getNodeOffset()", 100L, interNodeInfo.getNodeOffset());
    }
}

