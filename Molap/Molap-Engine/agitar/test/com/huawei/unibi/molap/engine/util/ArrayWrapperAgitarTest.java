/**
 * Generated by Agitar build: AgitarOne Version 5.3.0.000022 (Build date: Jan 04, 2012) [5.3.0.000022]
 * JDK Version: 1.6.0_14
 *
 * Generated on 29 Jul, 2013 4:48:12 PM
 * Time to generate: 00:30.529 seconds
 *
 */

package com.huawei.unibi.molap.engine.util;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import mondrian.olap.InvalidArgumentException;

public class ArrayWrapperAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return ArrayWrapper.class;
    }
    
    public void testConstructor() throws Throwable {
        long[] data = new long[2];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data);
        assertSame("arrayWrapper.getData()", data, arrayWrapper.getData());
    }
    
    public void testCompareTo() throws Throwable {
        long[] data = new long[2];
        ArrayWrapper other = new ArrayWrapper(data);
        long[] data2 = new long[0];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data2);
        long[] data3 = new long[1];
        arrayWrapper.initialize(data3);
        long[] data4 = new long[1];
        data4[0] = 78L;
        other.initialize(data4);
        int result = arrayWrapper.compareTo(other);
        assertEquals("result", -1, result);
    }
    
    public void testCompareTo1() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper other = new ArrayWrapper(data);
        long[] data2 = new long[3];
        other.initialize(data2);
        long[] data3 = new long[3];
        data3[0] = 68L;
        int result = new ArrayWrapper(data3).compareTo(other);
        assertEquals("result", 1, result);
    }
    
    public void testCompareTo2() throws Throwable {
        long[] data = new long[2];
        long[] data2 = new long[0];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data2);
        ArrayWrapper other = new ArrayWrapper(data);
        long[] data3 = new long[1];
        data3[0] = 62L;
        arrayWrapper.initialize(data3);
        long[] data4 = new long[4];
        data4[0] = 62L;
        other.initialize(data4);
        int result = arrayWrapper.compareTo(other);
        assertEquals("result", 0, result);
    }
    
    public void testCompareTo3() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper other = new ArrayWrapper(data);
        long[] data2 = new long[0];
        other.initialize(data2);
        int result = other.compareTo(other);
        assertEquals("result", 0, result);
    }
    
    public void testEquals() throws Throwable {
        long[] data = new long[1];
        long[] data2 = new long[2];
        boolean result = new ArrayWrapper(data).equals(new ArrayWrapper(data2));
        assertFalse("result", result);
    }
    
    public void testEquals1() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper other = new ArrayWrapper(data);
        boolean result = other.equals(other);
        assertTrue("result", result);
    }
    
    public void testEquals2() throws Throwable {
        long[] data = new long[2];
        boolean result = new ArrayWrapper(data).equals(new Integer(1221431));
        assertFalse("result", result);
    }
    
    public void testGetData() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data);
        long[] data2 = new long[1];
        arrayWrapper.initialize(data2);
        long[] result = arrayWrapper.getData();
        assertSame("result", data2, result);
        assertEquals("data2[0]", 0L, data2[0]);
    }
    
    public void testGetData1() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data);
        Mockingbird.enterTestMode(ArrayWrapper.class);
        long[] result = arrayWrapper.getData();
        assertEquals("result.length", 0, result.length);
    }
    
    public void testHashCode() throws Throwable {
        long[] data = new long[1];
        int result = new ArrayWrapper(data).hashCode();
        assertEquals("result", 31, result);
    }
    
    public void testInitialize() throws Throwable {
        long[] data = new long[1];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data);
        long[] data2 = new long[4];
        arrayWrapper.initialize(data2);
        assertSame("arrayWrapper.getData()", data2, arrayWrapper.getData());
    }
    
    public void testConstructorThrowsInvalidArgumentException() throws Throwable {
        try {
            new ArrayWrapper(null);
            fail("Expected InvalidArgumentException to be thrown");
        } catch (InvalidArgumentException ex) {
            assertEquals("ex.getMessage()", "Mondrian Error: Data Array is NUll", ex.getMessage());
            assertThrownBy(ArrayWrapper.class, ex);
        }
    }
    
    public void testCompareToThrowsArrayIndexOutOfBoundsException() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper other = new ArrayWrapper(data);
        long[] data2 = new long[0];
        other.initialize(data2);
        long[] data3 = new long[3];
        try {
            new ArrayWrapper(data3).compareTo(other);
            fail("Expected ArrayIndexOutOfBoundsException to be thrown");
        } catch (ArrayIndexOutOfBoundsException ex) {
            assertEquals("ex.getMessage()", "0", ex.getMessage());
            assertThrownBy(ArrayWrapper.class, ex);
        }
    }
    
    public void testCompareToThrowsNullPointerException() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data);
        long[] data2 = new long[1];
        arrayWrapper.initialize(data2);
        try {
            arrayWrapper.compareTo((ArrayWrapper) null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(ArrayWrapper.class, ex);
        }
    }
    
    public void testInitializeThrowsInvalidArgumentException() throws Throwable {
        long[] data = new long[0];
        ArrayWrapper arrayWrapper = new ArrayWrapper(data);
        try {
            arrayWrapper.initialize((long[]) null);
            fail("Expected InvalidArgumentException to be thrown");
        } catch (InvalidArgumentException ex) {
            assertEquals("ex.getMessage()", "Mondrian Error: Data Array is NUll", ex.getMessage());
            assertThrownBy(ArrayWrapper.class, ex);
            assertSame("arrayWrapper.getData()", data, arrayWrapper.getData());
        }
    }
}

