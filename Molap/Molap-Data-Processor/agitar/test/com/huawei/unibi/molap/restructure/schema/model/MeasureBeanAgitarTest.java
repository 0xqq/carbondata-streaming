/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/**
 * Generated by Agitar build: AgitarOne Version 5.3.0.000022 (Build date: Jan 04, 2012) [5.3.0.000022]
 * JDK Version: 1.6.0_14
 *
 * Generated on Jul 31, 2013 6:21:01 PM
 * Time to generate: 00:09.924 seconds
 *
 */

package com.huawei.unibi.molap.restructure.schema.model;

import com.agitar.lib.junit.AgitarTestCase;

public class MeasureBeanAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return MeasureBean.class;
    }
    
    public void testConstructor() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        assertFalse("measureBean.isNew()", measureBean.isNew());
    }
    
    public void testEquals() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setName("testMeasureBeanName");
        boolean result = measureBean.equals(new MeasureBean());
        assertFalse("result", result);
    }
    
    public void testEquals1() throws Throwable {
        MeasureBean obj = new MeasureBean();
        obj.setName("testMeasureBeanName");
        boolean result = obj.equals(obj);
        assertTrue("result", result);
    }
    
    public void testEquals2() throws Throwable {
        boolean result = new MeasureBean().equals(new Integer(31));
        assertFalse("result", result);
    }
    
    public void testHashCode() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setName("testMeasureBeanName");
        int result = measureBean.hashCode();
        assertEquals("result", -806227194, result);
        assertEquals("measureBean.getName()", "testMeasureBeanName", measureBean.getName());
    }
    
    public void testSetAggregator() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setAggregator("testMeasureBeanAggregator");
        assertEquals("measureBean.getAggregator()", "testMeasureBeanAggregator", measureBean.getAggregator());
    }
    
    public void testSetColumn() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setColumn("testMeasureBeanColumn");
        assertEquals("measureBean.getColumn()", "testMeasureBeanColumn", measureBean.getColumn());
    }
    
    public void testSetName() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setName("testMeasureBeanName");
        assertEquals("measureBean.getName()", "testMeasureBeanName", measureBean.getName());
    }
    
    public void testSetNew() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setNew(true);
        assertTrue("measureBean.isNew()", measureBean.isNew());
    }
    
    public void testSetRestructDefVal() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        measureBean.setRestructDefVal(100.0);
        assertEquals("measureBean.getRestructDefVal()", 100.0, measureBean.getRestructDefVal(), 1.0E-6);
    }
    
    public void testEqualsThrowsNullPointerException() throws Throwable {
        try {
            new MeasureBean().equals(new MeasureBean());
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MeasureBean.class, ex);
        }
    }
    
    public void testHashCodeThrowsNullPointerException() throws Throwable {
        MeasureBean measureBean = new MeasureBean();
        try {
            measureBean.hashCode();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MeasureBean.class, ex);
            assertNull("measureBean.getName()", measureBean.getName());
        }
    }
}

