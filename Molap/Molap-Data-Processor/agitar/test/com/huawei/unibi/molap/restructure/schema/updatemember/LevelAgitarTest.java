/**
 * Generated by Agitar build: AgitarOne Version 5.3.0.000022 (Build date: Jan 04, 2012) [5.3.0.000022]
 * JDK Version: 1.6.0_14
 *
 * Generated on Aug 13, 2013 6:12:15 PM
 * Time to generate: 00:15.507 seconds
 *
 */

package com.huawei.unibi.molap.restructure.schema.updatemember;

import com.agitar.lib.junit.AgitarTestCase;
import com.huawei.unibi.molap.restructure.schema.model.LevelBean;

public class LevelAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return Level.class;
    }
    
    public void testConstructor() throws Throwable {
        Level level = new Level("testLevelValue");
        assertEquals("level.getValue()", "testLevelValue", level.getValue());
        assertEquals("level.getIndex()", -1, level.getIndex());
    }
    
    public void testEquals() throws Throwable {
        Level obj = new Level("testLevelValue1");
        obj.setValue("testLevelValue1");
        boolean result = new Level("testLevelValue").equals(obj);
        assertFalse("result", result);
    }
    
    public void testEquals1() throws Throwable {
        boolean result = new Level("testLevelValue").equals(new Integer(0));
        assertFalse("result", result);
    }
    
    public void testEquals2() throws Throwable {
        Level level = new Level("testString");
        level.setIndex(0);
        Level obj = new Level("testString");
        obj.setIndex(0);
        boolean result = level.equals(obj);
        assertTrue("result", result);
    }
    
    public void testEquals3() throws Throwable {
        Level obj = new Level("testLevelValue");
        obj.setIndex(0);
        Level level = new Level("testLevelValue1");
        level.setIndex(0);
        level.setValue(null);
        boolean result = level.equals(obj);
        assertFalse("result", result);
    }
    
    public void testEquals4() throws Throwable {
        Level obj = new Level("testLevelValue");
        boolean result = obj.equals(obj);
        assertTrue("result", result);
    }
    
    public void testEquals5() throws Throwable {
        Level obj = new Level("testLevelValue");
        obj.setIndex(100);
        boolean result = new Level("testLevelValue1").equals(obj);
        assertFalse("result", result);
    }
    
    public void testEquals6() throws Throwable {
        Level level = new Level("testLevelValue");
        level.setIndex(2);
        level.setValue(null);
        Level obj = new Level("testLevelValue1");
        obj.setIndex(2);
        obj.setValue(null);
        boolean result = level.equals(obj);
        assertTrue("result", result);
    }
    
    public void testGetName() throws Throwable {
        Level level = new Level("testLevelValue");
        level.setLevelBean(new LevelBean());
        String result = level.getName();
        assertNull("result", result);
    }
    
    public void testGetName1() throws Throwable {
        LevelBean levelBean = new LevelBean();
        Level level = new Level("testLevelValue");
        levelBean.setLevelName("testLevelLevelName");
        level.setLevelBean(levelBean);
        String result = level.getName();
        assertEquals("result", "testLevelLevelName", result);
    }
    
    public void testHashCode() throws Throwable {
        Level level = new Level("testLevelValue");
        level.setValue(null);
        int result = level.hashCode();
        assertEquals("result", 930, result);
        assertNull("level.getValue()", level.getValue());
    }
    
    public void testHashCode1() throws Throwable {
        Level level = new Level("testLevelValue");
        int result = level.hashCode();
        assertEquals("result", -515789279, result);
        assertEquals("level.getValue()", "testLevelValue", level.getValue());
    }
    
    public void testSetIndex() throws Throwable {
        Level level = new Level("testLevelValue");
        level.setIndex(100);
        assertEquals("level.getIndex()", 100, level.getIndex());
    }
    
    public void testSetLevelBean() throws Throwable {
        Level level = new Level("testLevelValue");
        LevelBean levelBean = new LevelBean();
        level.setLevelBean(levelBean);
        assertSame("level.getLevelBean()", levelBean, level.getLevelBean());
    }
    
    public void testSetRenameTo() throws Throwable {
        Level level = new Level("testLevelValue");
        level.setRenameTo("testLevelRenameTo");
        assertEquals("level.getRenameTo()", "testLevelRenameTo", level.getRenameTo());
    }
    
    public void testSetValue() throws Throwable {
        Level level = new Level("testLevelValue");
        level.setValue("testLevelValue1");
        assertEquals("level.getValue()", "testLevelValue1", level.getValue());
    }
    
    public void testGetNameThrowsNullPointerException() throws Throwable {
        try {
            new Level("testLevelValue").getName();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(Level.class, ex);
        }
    }
}

